<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAlCAYAAAAjt+tHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQzSURBVFhHtZdbSBRRHMZ9EB9CfIiIMLK0sgsWYhaioFQWRFkRgWRZqZFoUW1mYmVYVmKmogU9
        SRAZFBUJQTcv3bRSy9Ws9ZKZqWk3IrsYhJ3Od/bM7syZMzuu2B9+rPufc77vm5mzzhkPQggjOjrak+JF
        8ab4UMaPMdCENjw8FV+1+TgKBvpSplFmUALHCGhBE9rwgBcLoTafQAmgBFFCKWFjDDShDQ94sRAIgEuC
        VDgQ5rW0jPxP4MG94OmFALgvuDRBGBCUXEvC0qxkyaE2Kf6bq4lfXAXxjb2tYUrcXfYZlflKOg+a0OYh
        cCXg6Y0AWBy4P6E4GLHPSpYfbjMkMuMFaer8Rvq/DNFbaK8PX3+zz6j0Z9I5CtDmAXA74OmDALgUWCTs
        8q/IbnfJ9C3VZPG+GmaormNlbewKLMuySecp8AC4DfAcrwTASmUBVuV0uGTpwZfM6O3AT25tL/RCd9VL
        56hRBYCnPsCa4x2m+MdXMsPy2n5y5UEfmZ1g/y4bK2IaYF3ua1Oi9ltZCKXOlHeRkB2PpWNFTAPEnux0
        iXL2yUVWcqGih5y71U3OXH/DeiDmiE06T8E0QNypTkP8N9l/fj2ffvFz11ak5RE7LpurYBogvuiNlHBL
        HRPv++z8+ckKY2Yl3pNqANMAiSVdUiBcfK2T2zgLfXXhfwR6q4+2SHVMA4Sl23TM2f5EZ6SUrB+bU8/6
        Mq1RBYBY/uUOLu8s9NWoC98X7m3RabkdYMGeZp04SunJjqGCtlWRwKQanZ7bAealNrDVLZZZgNKb3eyY
        qOd2AL+NlWTn6WYuqy0YKIg1PPx3dAEiMmwapm6qIrbuQS6rL8VcDDH48w/riXqmAaIOtGrAs/9Ow0cu
        qy+jAD+G7AFEPdMA4jN8ZsJ9klLcxGWdBXE1YuEWTKZ9Uc80gPj4DE9rZCvaqGTmqLxLHeyYqGcaQHx6
        xeTYNxpXH77n0toyCoD+ot11Oj3TALIHSHBKjcsQYmEskGkZBXBsyWT/v8GCHbVMNKmgkbT3fudWzsIe
        EY9mxVymAVQBHFsyzaY0Ls9GUs92S1lLHzCBCdUOE5EAuleIsDyVzgXQ5gE0m1LNtnxlVgPZWthKLKXv
        xhRoQpsH0GzLR/Risjb7Gck83zsiMFamAeDBveDJXkzMXs3CASavP/qcZF/scwnGcCM2j2sA+asZXT/q
        EEiFS4P7g0WClTqXMp8SAuENJxpJ7pV+KTjGzUP4HMyFBrSgCW14MHN4m72eI+kkih8FQsEwiM+zksLr
        AxrQ4+bBfCzmYC40oGX8eu4KDOYTIYYzmQ+jrflWUnLjAwN/c3OcNcZgLOY4jIyQNkUgxAWVEOxKJBU0
        MVRn7pY5kDZlQJALwwCXmK0Jbo57jp5b5kDaNALC3GAiBYsKpgB/o+eWOZA2XQEDivKLgSnQrOyRQzz+
        AWBUcgOaP46gAAAAAElFTkSuQmCC
</value>
  </data>
</root>